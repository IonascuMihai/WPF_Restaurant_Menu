//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Restaurant.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RestaurantConnString : DbContext
    {
        public RestaurantConnString()
            : base("name=RestaurantConnString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alergen> Alergen { get; set; }
        public virtual DbSet<Categorie> Categorie { get; set; }
        public virtual DbSet<Comanda> Comanda { get; set; }
        public virtual DbSet<Comanda_Meniu_Aux> Comanda_Meniu_Aux { get; set; }
        public virtual DbSet<Comanda_Preparat_Aux> Comanda_Preparat_Aux { get; set; }
        public virtual DbSet<Meniu> Meniu { get; set; }
        public virtual DbSet<Meniu_Preparat_Aux> Meniu_Preparat_Aux { get; set; }
        public virtual DbSet<Preparat> Preparat { get; set; }
        public virtual DbSet<Preparat_Alergen_Aux> Preparat_Alergen_Aux { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Utilizator> Utilizator { get; set; }
    
        public virtual int AddAllergen(string allergen)
        {
            var allergenParameter = allergen != null ?
                new ObjectParameter("Allergen", allergen) :
                new ObjectParameter("Allergen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAllergen", allergenParameter);
        }
    
        public virtual int AddCategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCategory", categoryParameter);
        }
    
        public virtual int AddMenuItem(string name, Nullable<double> price, Nullable<int> category, string photo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMenuItem", nameParameter, priceParameter, categoryParameter, photoParameter);
        }
    
        public virtual int AddPreparat(string name, Nullable<double> price, Nullable<double> menu_quantity, Nullable<double> total_quantity, string photo, Nullable<int> category)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var menu_quantityParameter = menu_quantity.HasValue ?
                new ObjectParameter("Menu_quantity", menu_quantity) :
                new ObjectParameter("Menu_quantity", typeof(double));
    
            var total_quantityParameter = total_quantity.HasValue ?
                new ObjectParameter("Total_quantity", total_quantity) :
                new ObjectParameter("Total_quantity", typeof(double));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPreparat", nameParameter, priceParameter, menu_quantityParameter, total_quantityParameter, photoParameter, categoryParameter);
        }
    
        public virtual int AddPreparatAllergen(Nullable<int> preparat_id, Nullable<int> alergen_id)
        {
            var preparat_idParameter = preparat_id.HasValue ?
                new ObjectParameter("Preparat_id", preparat_id) :
                new ObjectParameter("Preparat_id", typeof(int));
    
            var alergen_idParameter = alergen_id.HasValue ?
                new ObjectParameter("Alergen_id", alergen_id) :
                new ObjectParameter("Alergen_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPreparatAllergen", preparat_idParameter, alergen_idParameter);
        }
    
        public virtual int AddToComandaMeniuAux(Nullable<int> id_comanda, Nullable<int> id_meniu)
        {
            var id_comandaParameter = id_comanda.HasValue ?
                new ObjectParameter("id_comanda", id_comanda) :
                new ObjectParameter("id_comanda", typeof(int));
    
            var id_meniuParameter = id_meniu.HasValue ?
                new ObjectParameter("id_meniu", id_meniu) :
                new ObjectParameter("id_meniu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToComandaMeniuAux", id_comandaParameter, id_meniuParameter);
        }
    
        public virtual int AddToComandaPreparatAux(Nullable<int> id_comanda, Nullable<int> id_preparat)
        {
            var id_comandaParameter = id_comanda.HasValue ?
                new ObjectParameter("id_comanda", id_comanda) :
                new ObjectParameter("id_comanda", typeof(int));
    
            var id_preparatParameter = id_preparat.HasValue ?
                new ObjectParameter("id_preparat", id_preparat) :
                new ObjectParameter("id_preparat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToComandaPreparatAux", id_comandaParameter, id_preparatParameter);
        }
    
        public virtual int CancelOrder(Nullable<int> order_id)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelOrder", order_idParameter);
        }
    
        public virtual ObjectResult<CheckEmailAndPassword_Result> CheckEmailAndPassword(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckEmailAndPassword_Result>("CheckEmailAndPassword", emailParameter, passwordParameter);
        }
    
        public virtual int DeleteMeniu(Nullable<int> meniu_index)
        {
            var meniu_indexParameter = meniu_index.HasValue ?
                new ObjectParameter("meniu_index", meniu_index) :
                new ObjectParameter("meniu_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMeniu", meniu_indexParameter);
        }
    
        public virtual int DeletePreparat(Nullable<int> preparat_index)
        {
            var preparat_indexParameter = preparat_index.HasValue ?
                new ObjectParameter("preparat_index", preparat_index) :
                new ObjectParameter("preparat_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePreparat", preparat_indexParameter);
        }
    
        public virtual ObjectResult<FindMenuByName_Result> FindMenuByName(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindMenuByName_Result>("FindMenuByName", searchTextParameter);
        }
    
        public virtual ObjectResult<FindPreparatByName_Result> FindPreparatByName(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindPreparatByName_Result>("FindPreparatByName", searchTextParameter);
        }
    
        public virtual ObjectResult<string> GetAllergensForPreparat(Nullable<int> preparat_index)
        {
            var preparat_indexParameter = preparat_index.HasValue ?
                new ObjectParameter("preparat_index", preparat_index) :
                new ObjectParameter("preparat_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllergensForPreparat", preparat_indexParameter);
        }
    
        public virtual ObjectResult<string> GetAllergenStrings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllergenStrings");
        }
    
        public virtual ObjectResult<GetAllergenStrings2_Result> GetAllergenStrings2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllergenStrings2_Result>("GetAllergenStrings2");
        }
    
        public virtual ObjectResult<GetCategoryStrings_Result> GetCategoryStrings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryStrings_Result>("GetCategoryStrings");
        }
    
        public virtual ObjectResult<string> GetFiecareAlergenDinFiecarePreparatAlUnuiMeniu(Nullable<int> meniu_index)
        {
            var meniu_indexParameter = meniu_index.HasValue ?
                new ObjectParameter("meniu_index", meniu_index) :
                new ObjectParameter("meniu_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFiecareAlergenDinFiecarePreparatAlUnuiMeniu", meniu_indexParameter);
        }
    
        public virtual ObjectResult<string> GetFoodNamesForUserWithOrderId(Nullable<int> user_id, Nullable<int> order_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFoodNamesForUserWithOrderId", user_idParameter, order_idParameter);
        }
    
        public virtual ObjectResult<string> GetFoodNamesForUserWithOrderId2(Nullable<int> user_id, Nullable<int> order_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFoodNamesForUserWithOrderId2", user_idParameter, order_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastOrderId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastOrderId");
        }
    
        public virtual ObjectResult<string> GetMenuItemStrings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMenuItemStrings");
        }
    
        public virtual ObjectResult<Nullable<double>> GetMenuQuantities(Nullable<int> menu_index)
        {
            var menu_indexParameter = menu_index.HasValue ?
                new ObjectParameter("menu_index", menu_index) :
                new ObjectParameter("menu_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetMenuQuantities", menu_indexParameter);
        }
    
        public virtual ObjectResult<GetMenus_Result> GetMenus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenus_Result>("GetMenus");
        }
    
        public virtual ObjectResult<GetOrderDetailsForGivenOrderId_Result> GetOrderDetailsForGivenOrderId(Nullable<int> order_id)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderDetailsForGivenOrderId_Result>("GetOrderDetailsForGivenOrderId", order_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetOrderIdsForCustomer(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetOrderIdsForCustomer", user_idParameter);
        }
    
        public virtual ObjectResult<GetOrdersUnsorted_Result> GetOrdersUnsorted()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrdersUnsorted_Result>("GetOrdersUnsorted");
        }
    
        public virtual ObjectResult<GetPreparate_Result> GetPreparate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreparate_Result>("GetPreparate");
        }
    
        public virtual ObjectResult<string> GetPreparateStrings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPreparateStrings");
        }
    
        public virtual int RegisterOrder(Nullable<double> total_price, string current_date, string delivery_time, Nullable<int> user_id)
        {
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(double));
    
            var current_dateParameter = current_date != null ?
                new ObjectParameter("current_date", current_date) :
                new ObjectParameter("current_date", typeof(string));
    
            var delivery_timeParameter = delivery_time != null ?
                new ObjectParameter("delivery_time", delivery_time) :
                new ObjectParameter("delivery_time", typeof(string));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterOrder", total_priceParameter, current_dateParameter, delivery_timeParameter, user_idParameter);
        }
    
        public virtual int RegisterUser(string name, string surname, string email, string phone, string address, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterUser", nameParameter, surnameParameter, emailParameter, phoneParameter, addressParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SortActivesByDate_Result> SortActivesByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SortActivesByDate_Result>("SortActivesByDate");
        }
    
        public virtual ObjectResult<SortActivesByETA_Result> SortActivesByETA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SortActivesByETA_Result>("SortActivesByETA");
        }
    
        public virtual ObjectResult<SortByDate_Result> SortByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SortByDate_Result>("SortByDate");
        }
    
        public virtual ObjectResult<SortByETA_Result> SortByETA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SortByETA_Result>("SortByETA");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateMeniu(string name, string old_name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var old_nameParameter = old_name != null ?
                new ObjectParameter("Old_name", old_name) :
                new ObjectParameter("Old_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMeniu", nameParameter, old_nameParameter);
        }
    
        public virtual int UpdateOrderState(string new_state, Nullable<int> order_index)
        {
            var new_stateParameter = new_state != null ?
                new ObjectParameter("new_state", new_state) :
                new ObjectParameter("new_state", typeof(string));
    
            var order_indexParameter = order_index.HasValue ?
                new ObjectParameter("order_index", order_index) :
                new ObjectParameter("order_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderState", new_stateParameter, order_indexParameter);
        }
    
        public virtual int UpdatePreparat(string name, Nullable<double> price, Nullable<double> menu_quantity, Nullable<double> total_quantity, string old_name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var menu_quantityParameter = menu_quantity.HasValue ?
                new ObjectParameter("Menu_quantity", menu_quantity) :
                new ObjectParameter("Menu_quantity", typeof(double));
    
            var total_quantityParameter = total_quantity.HasValue ?
                new ObjectParameter("Total_quantity", total_quantity) :
                new ObjectParameter("Total_quantity", typeof(double));
    
            var old_nameParameter = old_name != null ?
                new ObjectParameter("Old_name", old_name) :
                new ObjectParameter("Old_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePreparat", nameParameter, priceParameter, menu_quantityParameter, total_quantityParameter, old_nameParameter);
        }
    
        public virtual ObjectResult<GetLowStockFood_Result> GetLowStockFood(Nullable<int> weight_threshold)
        {
            var weight_thresholdParameter = weight_threshold.HasValue ?
                new ObjectParameter("weight_threshold", weight_threshold) :
                new ObjectParameter("weight_threshold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLowStockFood_Result>("GetLowStockFood", weight_thresholdParameter);
        }
    
        public virtual int AddMenuComponent(Nullable<int> menu_id, Nullable<int> preparat_id, Nullable<double> discount_value)
        {
            var menu_idParameter = menu_id.HasValue ?
                new ObjectParameter("menu_id", menu_id) :
                new ObjectParameter("menu_id", typeof(int));
    
            var preparat_idParameter = preparat_id.HasValue ?
                new ObjectParameter("preparat_id", preparat_id) :
                new ObjectParameter("preparat_id", typeof(int));
    
            var discount_valueParameter = discount_value.HasValue ?
                new ObjectParameter("discount_value", discount_value) :
                new ObjectParameter("discount_value", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMenuComponent", menu_idParameter, preparat_idParameter, discount_valueParameter);
        }
    
        public virtual ObjectResult<FindPreparateForGivenOrderIndex_Result> FindPreparateForGivenOrderIndex(Nullable<int> order_index)
        {
            var order_indexParameter = order_index.HasValue ?
                new ObjectParameter("order_index", order_index) :
                new ObjectParameter("order_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindPreparateForGivenOrderIndex_Result>("FindPreparateForGivenOrderIndex", order_indexParameter);
        }
    
        public virtual int UpdateRestaurantWeight(Nullable<double> current_weight, Nullable<int> preparat_index)
        {
            var current_weightParameter = current_weight.HasValue ?
                new ObjectParameter("current_weight", current_weight) :
                new ObjectParameter("current_weight", typeof(double));
    
            var preparat_indexParameter = preparat_index.HasValue ?
                new ObjectParameter("preparat_index", preparat_index) :
                new ObjectParameter("preparat_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRestaurantWeight", current_weightParameter, preparat_indexParameter);
        }
    
        public virtual ObjectResult<GetMenuPreparatComponentsWeightAndId_Result> GetMenuPreparatComponentsWeightAndId(Nullable<int> order_index)
        {
            var order_indexParameter = order_index.HasValue ?
                new ObjectParameter("order_index", order_index) :
                new ObjectParameter("order_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuPreparatComponentsWeightAndId_Result>("GetMenuPreparatComponentsWeightAndId", order_indexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNumberOfOrders(Nullable<int> user_index, string time_inf, string time_sup, string today_date)
        {
            var user_indexParameter = user_index.HasValue ?
                new ObjectParameter("user_index", user_index) :
                new ObjectParameter("user_index", typeof(int));
    
            var time_infParameter = time_inf != null ?
                new ObjectParameter("time_inf", time_inf) :
                new ObjectParameter("time_inf", typeof(string));
    
            var time_supParameter = time_sup != null ?
                new ObjectParameter("time_sup", time_sup) :
                new ObjectParameter("time_sup", typeof(string));
    
            var today_dateParameter = today_date != null ?
                new ObjectParameter("today_date", today_date) :
                new ObjectParameter("today_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumberOfOrders", user_indexParameter, time_infParameter, time_supParameter, today_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FindPreparateIdForMenuIndex(Nullable<int> menu_index)
        {
            var menu_indexParameter = menu_index.HasValue ?
                new ObjectParameter("menu_index", menu_index) :
                new ObjectParameter("menu_index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FindPreparateIdForMenuIndex", menu_indexParameter);
        }
    }
}
